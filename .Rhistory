install.packages('plyr', repos = "http://cran.us.r-project.org")
install.packages("NLP")
library("plyr")
rmarkdown::render("filebajwa.Rmd")
rmarkdown::render("filename.Rmd")
rmarkdown::render("file.Rmd", "pdf_document'")
install.packages("readx1")
install.packages("r package", repos = "http://cran.us.r-project.org")
options("repos" = c(CRAN = "http://cran.ma.imperial.ac.uk/"))
sentiment(stem_corpus_review_kwong)
install.packages("r package", repos = "http://cran.us.r-project.org")
library(remotes)
install.packages("remotes")
library(remotes)
install_github("cran/foobarbaz")
install_github("cran/contrib.url")
install_github("cran/contrib")
install.packages("contrib")
install.packages("contrib.url")
marketbasket <-read.csv("Groceries_dataset.csv",header=T,
colClasses="factor")
setwd("D:/rstudio coursework/task2")
names(marketbasket)
marketbasket <-read.csv("Groceries_dataset.csv",header=T,
colClasses="factor")
names(marketbasket)
head(marketbasket)
tail(marketbasket)
summary(marketbasket)
str(marketbasket)
dim(marketbasket)
plot(marketbasket$Member_number)
plot(marketbasket$itemDescription)
install.packages("ggplot2")
library(ggplot2)
ggplot2(marketbasket, aes(x = Member_number, y = itemDescription)
ggplot2(marketbasket, aes(x = Member_number, y = itemDescription)
ggplot2(marketbasket, aes(x = Member_number, y = itemDescription)
ggplot2(marketbasket, aes(Member_number,itemDescription)
ggplot2(marketbasket, aes(Member_number,itemDescription)
library(arules)
ggplot2(marketbasket$Member_number,marketbasket$itemDescription)
install.packages("tidyverse")
library(tidyverse)
ggplot2(marketbasket$Member_number,marketbasket$itemDescription)
ggplot(marketbasket$Member_number,marketbasket$itemDescription)
ggplot(marketbasket,aes(Membernumber,itemDescription) )
ggplot(marketbasket,aes(Member_number,itemDescription) )
ggplot2(marketbasket,aes(Member_number,itemDescription) )
ggplot(marketbasket,aes(Member_number,itemDescription) )
ggplot(marketbasket,aes(itemDescription,Member_number) )
rules <- apriori(marketbasket)
install.packages("arulesViz") # install “arules” package.
library(arulesViz)
library(arules)
rules <- apriori(marketbasket)
summary(rules)
rules <- apriori(marketbasket,parameter=list(supp=0.0016, conf=0.1))
summary(rules)
rules <- apriori(marketbasket,parameter=list(supp=0.0016, conf=0.5))
summary(rules)
rules <- apriori(marketbasket,parameter=list(supp=0.0016, conf=0.01))
summary(rules)
plot(rules)
rules <- apriori(marketbasket,parameter=list(supp=0.00016, conf=0.01))
summary(rules)
plot(rules)
rules <- apriori(marketbasket,parameter=list(supp=0.00016, conf=0.1))
summary(rules)
plot(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter =list(minlen=2,maxlen=3, conf = 0.95))
rules <- apriori(marketbasket,
parameter =list(minlen=2,maxlen=3, conf = 0.095))
rules <- apriori(marketbasket,
parameter =list(minlen=2,maxlen=3, conf = 0.05))
rules <- apriori(marketbasket,parameter=list(supp=0.00016, conf=0.1))
rules <- apriori(marketbasket,parameter=list(supp=0.0016, conf=0.1))
rules <- apriori(marketbasket,parameter=list(supp=0.0016, conf=0.05))
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.05))
rules <- apriori(marketbasket,parameter=list(supp=0.001, conf=0.05))
rules <- apriori(marketbasket,parameter=list(supp=0.001, conf=0.1))
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.1))
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.5))
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.6))
plot(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c("whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c(marketbasket$itemDescription="whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c(marketbasket$itemDescription=),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c(marketbasket$itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(marketbasket$itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(itemDescription="Whole Milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(itemDescription="whole milk"),default="lhs"))
setwd("D:/rstudio coursework/task1")
winequality<- read.csv("winequality-red.csv", sep = ",")
names(winequality)
head(winequality)
tail(winequality)
summary(winequality)
str(winequality)
nrow(winequality)
ncol(winequality)
dim(winequality)
winequality_f <- winequality[,c(1,2,3,4,5,6,7,8,9,10,11,12)]
winequality_f
winequality_f$euclidean_distance <- NA
winequality_f
fix_acidity<-7.5
vol_acidity<-0.5
cit_acid<-0.5
resid_sugar<-2.5
chl<-0.05
free_suldioxide<-20
total_suldioxide<-70
den<-0.99
ph<-3.5
sulp<-0.5
alc<-8
length <- nrow(winequality_f)
for(i in 1:length)
{
winequality_f$euclidean_distance[i] = sqrt(
(winequality_f$fixed.acidity[i]-fix_acidity)^2+
(winequality_f$volatile.acidity[i]-vol_acidity)^2+
(winequality_f$citric.acid[i]-cit_acid)^2+
(winequality_f$residual.sugar[i]-resid_sugar)^2+
(winequality_f$chlorides[i]-chl)^2+
(winequality_f$free.sulfur.dioxide[i]-free_suldioxide)^2+
(winequality_f$total.sulfur.dioxide[i]-total_suldioxide)^2+
(winequality_f$density[i]-den)^2+
(winequality_f$pH[i]-ph)^2+
(winequality_f$sulphates[i]-sulp)^2+
(winequality_f$alcohol[i]-alc)^2
)
#print(winequality_f$euclidean_distance[i])
}
winequality_f<-winequality_f[order(winequality_f$euclidean_distance),]
winequality_f
k <- 5
winequality_f[1:k,]
Class1 <- sum(winequality_f$quality[1:k]==5)
if (Class1 > k/2)
{
print("Wine quality is Good")
} else
{
print("Wine quality is not Good")
}
k <- 5
winequality_f[1:k,]
Class1 <- sum(winequality_f$quality[1:k]==1)
if (Class1 > k/2)
{
print("Wine quality is Good")
} else
{
print("Wine quality is not Good")
}
Class1 <- sum(winequality_f$quality[1:k]==5)
if (Class1 > k/2)
{
print("Wine quality is Good")
} else
{
print("Wine quality is not Good")
}
View(winequality_f)
k <- 5
winequality_f[1:k,]
Class1 <- sum(winequality_f$quality[1:k]==10)
if (Class1 > k/2)
{
print("Wine quality is Good")
} else
{
print("Wine quality is not Good")
}
k <- 5
winequality_f[1:k,]
Class1 <- sum(winequality_f$quality[1:k]==5)
if (Class1 > k/2)
{
print("Wine quality is Good")
} else
{
print("Wine quality is not Good")
}
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(itemDescription="whole milk"),default="lhs"))
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c("whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(whole milk),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(marketbasket$itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.95),
appearance= list(rhs=c(itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(itemDescription="whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(itemDescription="wholemilk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(marketbasket$itemDescription="whole milk"),default="lhs"))
marketbasket <-read.csv("Groceries_dataset.csv",header=T,
colClasses="factor")
setwd("D:/rstudio coursework/task1")
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(marketbasket$itemDescription="whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(itemDescription="whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(itemDescription),default="lhs"))
marketbasket <-read.csv("Groceries_dataset.csv",header=T,
colClasses="factor")
setwd("D:/rstudio coursework/task2")
marketbasket <-read.csv("Groceries_dataset.csv",header=T,
colClasses="factor")
names(marketbasket)
head(marketbasket)
tail(marketbasket)
summary(marketbasket)
str(marketbasket)
dim(marketbasket)
plot(marketbasket$Member_number)
plot(marketbasket$itemDescription)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(tidyverse)
ggplot(marketbasket,aes(itemDescription,Member_number) )
install.packages("arulesViz") # install “arules” package.
install.packages("arulesViz")
library(arules)
library(arulesViz)
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.6))
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.05))
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.1))
summary(rules)
plot(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c(itemDescription),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=itemDescription(whole milk),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=itemDescription("whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=itemDescription$whole milk,default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=marketbasket$itemDescription,default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=marketbasket$itemDescription("whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=marketbasket$itemDescription(whole milk),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=marketbasket$itemDescription,default="lhs"))
parameter = list(supp=0.0001,conf = 0.5)
rules <- apriori(marketbasket,
rules <- apriori(marketbasket,parameter = list(supp=0.0001,conf = 0.5)
itemdescrip<-marketbasket$itemDescription
itemdescrip<-marketbasket$itemDescription
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c("itemdescription=whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c("itemDescription=whole milk"),default="lhs"))
summary(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
summary(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(lhs("itemDescription=whole milk"),default="rhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(lhsc=("itemDescription=whole milk"),default="rhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
summary(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.1),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.05),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.00001,conf = 0.05),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.000001,conf = 0.05),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.000001,conf = 0.005),
appearance= list(lhs=c("itemDescription=whole milk"),default="rhs"))
summary(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.000001,conf = 0.005),
appearance= list(rhs=c("itemDescription=whole milk"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.000001,conf = 0.5),
appearance= list(rhs=c("itemDescription=whole milk"),default="lhs"))
summary(rules)
inspect(rules)
plot(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.5),
appearance= list(rhs=c("itemDescription=whole milk"),default="lhs"))
summary(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.4),
appearance= list(rhs=c("itemDescription=whole milk"),default="lhs"))
summary(rules)
inspect(rules)
setwd("D:/ASDM/task2")
retail <- read.csv("Online Retail.csv",header=T,colClasses = "factor")
names(retail)
head(retail)
tail(retail)
summary(retail)
str(retail)
dim(retail)
install.packages("Matrix")
install.packages("Matrix")
library("Matrix")
install.packages("arulesViz")
library(arulesViz)
install.packages("arules")
install.packages("arules")
library("arules")
set.seed = 220 # Setting seed
associa_rules = apriori(data = retail,
parameter = list(support = 0.004,
confidence = 0.2))
retail <- read.csv("Online Retail.csv",header=T,colClasses = "factor")
names(retail)
head(retail)
tail(retail)
summary(retail)
str(retail)
dim(retail)
library("Matrix")
library(arulesViz)
library("arules")
set.seed = 220 # Setting seed
# Plot
ggplot2(retail, topN = 10)
# Visualising the results
inspect(sort(associa_rules, by = 'lift')[1:10])
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.1))
rules <- apriori(retail,parameter=list(supp=0.0001, conf=0.1))
plot(rules)
rules <- apriori(retail,parameter=list(supp=0.1, conf=0.1))
rules <- apriori(retail,parameter=list(supp=0.01, conf=0.1))
rules <- apriori(retail,parameter=list(supp=0.01, conf=0.001))
plot(rules)
marketbasket <-read.csv("online Retail.csv",header=T,
colClasses="factor")
marketbasket <-read.csv("online Retail.csv",header=T,
colClasses="factor")
names(marketbasket)
head(marketbasket)
tail(marketbasket)
summary(marketbasket)
str(marketbasket)
dim(marketbasket)
plot(marketbasket$Member_number)
plot(marketbasket$CustomerID)
plot(marketbasket$itemDescription)
library(ggplot2)
library(tidyverse)
ggplot(marketbasket,aes(itemDescription,Member_number) )
ggplot(marketbasket,aes(Description,Member_number) )
ggplot(marketbasket,aes(Description,CustomerID) )
library(arules)
library(arulesViz)
rules <- apriori(marketbasket,parameter=list(supp=0.0001, conf=0.1))
rules <- apriori(marketbasket,parameter=list(supp=0.01, conf=0.1))
rules <- apriori(marketbasket,parameter=list(supp=0.01, conf=0.7))
rules <- apriori(marketbasket,parameter=list(supp=0.01, conf=0.77))
rules <- apriori(marketbasket,parameter=list(supp=0.01, conf=0.777))
rules <- apriori(marketbasket,parameter=list(supp=0.001, conf=0.777))
summary(rules)
plot(rules)
inspect(rules)
itemdescrip<-marketbasket$Description
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.4),
appearance= list(rhs=c("Description"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.4),
appearance= list(rhs=c("Description=DOTCOM POSTAGE"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.001,conf = 0.444),
appearance= list(rhs=c("Description=DOTCOM POSTAGE"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.001,conf = 0.777),
appearance= list(rhs=c("Description=DOTCOM POSTAGE"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.777),
appearance= list(rhs=c("Description=DOTCOM POSTAGE"),default="lhs"))
summary(rules)
inspect(rules)
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.1),
appearance= list(rhs=c("Description=DOTCOM POSTAGE"),default="lhs"))
rules <- apriori(marketbasket,
parameter = list(supp=0.0001,conf = 0.001),
appearance= list(rhs=c("Description=DOTCOM POSTAGE"),default="lhs"))
summary(rules)
inspect(rules)
setwd("D:/ASDM/task2")
online_retail <-read.csv("Groceries_dataset.csv",header=T,colClasses = "factor")
names(online_retail)
head(online_retail)
tail(online_retail)
summary(online_retail)
strans(online_retail)
dim(online_retail)
#install and load package arules
install.packages("arules")
install.packages("arules")
library(arules)
library(arulesViz)
#install and load plyr
install.packages("plyr")
library(plyr)
library(dplyr)
#we need to do is group data in the market basket dataframe by Member_number.
#We need this grouping and apply a function on it and store the output in another dataframe.
#This can be done by ddply.
transansactionData <- ddply(online_retail,c("Member_number"),
function(df1)paste(df1$itemDescription,
collapse = ","))
#save the file as the transansaction data.
write.csv(transansactionData,"D:/ASDM/task2/market_basket_transansactions.csv", quote = FALSE, row.names = FALSE)
#read the file.
trans <- read.transactions('D:/ASDM/task2/market_basket_transansactions.csv', format = 'basket', sep=',')
trans
summary(trans)
install.packages("RColorBrewer")
library(RColorBrewer)
install.packages("shiny")
library(shiny)
rules_ex <-apriori(trans,
parameter =list(minlen=1,maxlen=2,conf=0.004) )
ruleExplorer(trans)
